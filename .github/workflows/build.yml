name: Build and Test

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgl1-mesa-dev \
          libxi-dev \
          libxcursor-dev \
          libxrandr-dev \
          libxinerama-dev \
          libxxf86vm-dev \
          libgtk-3-dev \
          pkg-config

        # 尝试安装 WebKit 依赖，使用不同的包名
        sudo apt-get install -y libwebkit2gtk-4.0-dev || \
        sudo apt-get install -y libwebkit2gtk-4.1-dev || \
        sudo apt-get install -y webkit2gtk-4.0-dev || \
        echo "Warning: Could not install WebKit development package"

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Setup Go proxy and clean cache
      run: |
        go env -w GOPROXY=https://proxy.golang.org,direct
        go env -w GOSUMDB=sum.golang.org
        go clean -modcache

    - name: Download dependencies
      run: |
        go mod tidy
        go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Check code formatting
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Code is not formatted properly:"
          gofmt -s -l .
          exit 1
        fi

    - name: Run go vet
      run: go vet ./...

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-latest, macos-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-22.04'
      run: |
        sudo apt-get update

        # Ubuntu 22.04 使用 libwebkit2gtk-4.1-dev
        sudo apt-get install -y \
          build-essential \
          pkg-config \
          libgtk-3-dev \
          libwebkit2gtk-4.1-dev \
          libgl1-mesa-dev \
          libxi-dev \
          libxcursor-dev \
          libxrandr-dev \
          libxinerama-dev \
          libxxf86vm-dev

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Setup Go proxy and download dependencies
      run: |
        go env -w GOPROXY=https://proxy.golang.org,direct
        go env -w GOSUMDB=sum.golang.org
        go mod tidy
        go mod download

    - name: Build
      env:
        CGO_ENABLED: 1
      run: go build -v .

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: clipboard-monitor-${{ matrix.os }}
        path: |
          clipboard-monitor*
          awesomeProject2*
          web/
        retention-days: 7
